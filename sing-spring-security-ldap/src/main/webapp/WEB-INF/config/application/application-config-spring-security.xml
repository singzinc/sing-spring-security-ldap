<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">
			
	<!-- permit rule in the system  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/iris_cms/login" >

		<security:intercept-url pattern="/login**" access="permitAll"/>
		<security:intercept-url pattern="/sessioncontrol" access="permitAll"/>
		<security:intercept-url pattern="/basic/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/basic2/**" access="hasRole('ROLE_FOO')"/>
		<security:intercept-url pattern="/json/private/**" access="isAuthenticated()"/>
		<security:intercept-url pattern="/json/public/**" access="permitAll"/>
		<security:intercept-url pattern="/loginsuccess" access="isAuthenticated()"/>
		<security:intercept-url pattern="/**"  access="denyAll" />

		<!-- Login and Logout form -->
		
		<security:form-login
				login-page="/login.jsp" 
				authentication-failure-url="/login?error=true" 
				default-target-url="/loginsuccess"
				authentication-success-handler-ref="customAuthenticationSuccessHandler"
				/>
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/login?logout=true" 
				logout-url="/logout"
				/>
		<security:session-management invalid-session-url="/login.jsp" >
	      	<security:concurrency-control max-sessions="10" error-if-maximum-exceeded="false" />
	    </security:session-management>
		
		
		<security:headers>
			<security:xss-protection block="true"/>
			<security:hsts />
			<!--  
			<security:content-type-options />
			-->
			<security:frame-options />
		</security:headers>
		
		<!-- 
		<security:csrf/>
		-->
	</security:http>
	
	<!-- spring session config  --> 
	<bean id="concurrencyFilter"	class="org.springframework.security.web.session.ConcurrentSessionFilter">
	  	<property name="sessionRegistry" ref="sessionRegistry" />
	  	<property name="expiredUrl" value="/login" />
	</bean>
	
	<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<property name="maximumSessions" value="1" />
		<!-- <property name="expiredUrl" value="/sessioncontrol" /> -->
	</bean>

	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />	
	<!--  case one -->
	<!-- 
	<security:authentication-manager>
	        <security:ldap-authentication-provider  
	        		user-search-filter="(uid={0})"
	        		user-search-base="ou=users,ou=itd,ou=hk"
	        		server-ref="contextSource">
	        </security:ldap-authentication-provider>
	</security:authentication-manager>
	-->

	<!--  case two -->
	<!--
	<security:authentication-manager>
	        <security:ldap-authentication-provider  
	        		user-search-filter="(&amp;(uid={0})(title=manager))"
	        		user-search-base="ou=hk"
	        		server-ref="contextSource">
	        </security:ldap-authentication-provider>
	</security:authentication-manager>
	-->
	<!-- case three -->

	<security:authentication-manager>
	        <security:ldap-authentication-provider  
	        		user-search-filter="(uid={0})"
	        		user-search-base="ou=hk"
	        		group-search-filter="(uniqueMember={0})"
	        		group-search-base="ou=ranks,ou=groups,ou=itd,ou=hk"
	        		group-role-attribute="cn"
	        		role-prefix="ROLE_"
	        		server-ref="contextSource">
	        </security:ldap-authentication-provider>
	</security:authentication-manager>
	


	<bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <constructor-arg value="ldap://localhost:10390/dc=singco,dc=intranet,dc=asia"/>
        <property name="userDn" value="uid=admin,ou=system"/>
        <property name="password" value="test1234"/>
        <property name="baseEnvironmentProperties">
            <map>
                <entry key="java.naming.referral">
	                 <!--  
	                 A JNDI application uses the Context. 
	                 environment property to indicate to the service providers how to handle referrals 
	                 follow, ignore, 
	                 -->
                    <value>ignore</value>
                </entry>
            </map>
        </property>
    </bean>
    
    

    
    <bean id="customAuthenticationSuccessHandler" class="com.singplayground.security.CustomLdapAuthenticationSuccessHandler"></bean> 

</beans>
